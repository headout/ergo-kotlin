# A workflow that deploys the website to new branch and create a PR to gh-pages branch for every PR
name: Update documentation

on:
  # Run for every new release
  release:
    types: [released]
  repository_dispatch:
    types: [gh-pages]

jobs:
  gh-page-sync:
    runs-on: ubuntu-latest
    env:
      PAGES_BRANCH: gh-pages
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare mkdocs setup
        run: |
          python -m pip install mkdocs-material mkdocs-minify-plugin
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Generate API Docs
        run: |
          ./gradlew dokkaHtmlMultiModule
      - name: Deploy Website
        run: |
          cp README.md docs/index.md
          cp CHANGELOG.md docs/changelog.md
          mkdir -p docs/sample && cp sample/README.md docs/sample/index.md
          mkdir -p docs/ergo-annotations && cp ergo-annotations/README.md docs/ergo-annotations/index.md
          mkdir -p docs/ergo-processor && cp ergo-processor/README.md docs/ergo-processor/index.md
          mkdir -p docs/ergo-runtime && cp ergo-runtime/README.md docs/ergo-runtime/index.md
          mkdir -p docs/ergo-service-sqs && cp ergo-service-sqs/README.md docs/ergo-service-sqs/index.md
          mkdocs gh-deploy -b ${{ env.PAGES_BRANCH }} --force
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
