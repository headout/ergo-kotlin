var pages = [{'name': 'class CachedClassInspector(classInspector: <ERROR CLASS>)', 'description':'headout.oss.ergo.codegen.api.CachedClassInspector', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-cached-class-inspector/index.html', 'searchKey':'CachedClassInspector'},
{'name': 'fun CachedClassInspector(classInspector: <ERROR CLASS>)', 'description':'headout.oss.ergo.codegen.api.CachedClassInspector.CachedClassInspector', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-cached-class-inspector/-cached-class-inspector.html', 'searchKey':'CachedClassInspector'},
{'name': 'data class TargetMethod(name: String, returnType: <ERROR CLASS>, parameters: List<TargetParameter>, modifiers: Collection<<ERROR CLASS>>, isStatic: Boolean)', 'description':'headout.oss.ergo.codegen.api.TargetMethod', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-method/index.html', 'searchKey':'TargetMethod'},
{'name': 'fun TargetMethod(name: String, returnType: <ERROR CLASS>, parameters: List<TargetParameter>, modifiers: Collection<<ERROR CLASS>>, isStatic: Boolean)', 'description':'headout.oss.ergo.codegen.api.TargetMethod.TargetMethod', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-method/-target-method.html', 'searchKey':'TargetMethod'},
{'name': 'operator fun component1(): String', 'description':'headout.oss.ergo.codegen.api.TargetMethod.component1', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-method/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): String', 'description':'headout.oss.ergo.codegen.api.TargetParameter.component1', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-parameter/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): <ERROR CLASS>', 'description':'headout.oss.ergo.codegen.api.TargetType.component1', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-type/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component2(): <ERROR CLASS>', 'description':'headout.oss.ergo.codegen.api.TargetMethod.component2', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-method/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Int', 'description':'headout.oss.ergo.codegen.api.TargetParameter.component2', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-parameter/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Map<String, TargetMethod>', 'description':'headout.oss.ergo.codegen.api.TargetType.component2', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-type/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component3(): List<TargetParameter>', 'description':'headout.oss.ergo.codegen.api.TargetMethod.component3', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-method/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): <ERROR CLASS>', 'description':'headout.oss.ergo.codegen.api.TargetParameter.component3', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-parameter/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): <ERROR CLASS>', 'description':'headout.oss.ergo.codegen.api.TargetType.component3', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-type/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component4(): Collection<<ERROR CLASS>>', 'description':'headout.oss.ergo.codegen.api.TargetMethod.component4', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-method/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): <ERROR CLASS>?', 'description':'headout.oss.ergo.codegen.api.TargetParameter.component4', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-parameter/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component5(): Boolean', 'description':'headout.oss.ergo.codegen.api.TargetMethod.component5', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-method/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): Set<<ERROR CLASS>>?', 'description':'headout.oss.ergo.codegen.api.TargetParameter.component5', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-parameter/component5.html', 'searchKey':'component5'},
{'name': 'fun copy(name: String, returnType: <ERROR CLASS>, parameters: List<TargetParameter>, modifiers: Collection<<ERROR CLASS>>, isStatic: Boolean): TargetMethod', 'description':'headout.oss.ergo.codegen.api.TargetMethod.copy', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-method/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(name: String, index: Int, type: <ERROR CLASS>, defaultValue: <ERROR CLASS>?, qualifiers: Set<<ERROR CLASS>>?, isOptional: Boolean): TargetParameter', 'description':'headout.oss.ergo.codegen.api.TargetParameter.copy', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-parameter/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(className: <ERROR CLASS>, methods: Map<String, TargetMethod>, visibility: <ERROR CLASS>): TargetType', 'description':'headout.oss.ergo.codegen.api.TargetType.copy', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-type/copy.html', 'searchKey':'copy'},
{'name': 'data class TargetParameter(name: String, index: Int, type: <ERROR CLASS>, defaultValue: <ERROR CLASS>?, qualifiers: Set<<ERROR CLASS>>?, isOptional: Boolean)', 'description':'headout.oss.ergo.codegen.api.TargetParameter', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-parameter/index.html', 'searchKey':'TargetParameter'},
{'name': 'fun TargetParameter(name: String, index: Int, type: <ERROR CLASS>, defaultValue: <ERROR CLASS>?, qualifiers: Set<<ERROR CLASS>>?, isOptional: Boolean)', 'description':'headout.oss.ergo.codegen.api.TargetParameter.TargetParameter', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-parameter/-target-parameter.html', 'searchKey':'TargetParameter'},
{'name': 'fun belongsToType(clazz: KClass<*>): <ERROR CLASS>', 'description':'headout.oss.ergo.codegen.api.TargetParameter.belongsToType', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-parameter/belongs-to-type.html', 'searchKey':'belongsToType'},
{'name': 'operator fun component6(): Boolean', 'description':'headout.oss.ergo.codegen.api.TargetParameter.component6', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-parameter/component6.html', 'searchKey':'component6'},
{'name': 'data class TargetType(className: <ERROR CLASS>, methods: Map<String, TargetMethod>, visibility: <ERROR CLASS>)', 'description':'headout.oss.ergo.codegen.api.TargetType', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-type/index.html', 'searchKey':'TargetType'},
{'name': 'fun TargetType(className: <ERROR CLASS>, methods: Map<String, TargetMethod>, visibility: <ERROR CLASS>)', 'description':'headout.oss.ergo.codegen.api.TargetType.TargetType', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-target-type/-target-type.html', 'searchKey':'TargetType'},
{'name': 'interface TypeGenerator', 'description':'headout.oss.ergo.codegen.api.TypeGenerator', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-type-generator/index.html', 'searchKey':'TypeGenerator'},
{'name': 'abstract fun brewKotlin(brewHook: (<ERROR CLASS>) -> Unit): <ERROR CLASS>', 'description':'headout.oss.ergo.codegen.api.TypeGenerator.brewKotlin', 'location':'ergo-processor/headout.oss.ergo.codegen.api/-type-generator/brew-kotlin.html', 'searchKey':'brewKotlin'},
{'name': 'open fun brewKotlin(brewHook: (<ERROR CLASS>) -> Unit): <ERROR CLASS>', 'description':'headout.oss.ergo.codegen.task.TaskControllerGenerator.brewKotlin', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-controller-generator/brew-kotlin.html', 'searchKey':'brewKotlin'},
{'name': 'open fun brewKotlin(brewHook: (<ERROR CLASS>) -> Unit): <ERROR CLASS>', 'description':'headout.oss.ergo.processors.JobParserBinder.brewKotlin', 'location':'ergo-processor/headout.oss.ergo.processors/-job-parser-binder/brew-kotlin.html', 'searchKey':'brewKotlin'},
{'name': 'class TaskControllerGenerator : TypeGenerator', 'description':'headout.oss.ergo.codegen.task.TaskControllerGenerator', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-controller-generator/index.html', 'searchKey':'TaskControllerGenerator'},
{'name': 'class Builder', 'description':'headout.oss.ergo.codegen.task.TaskControllerGenerator.Builder', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-controller-generator/-builder/index.html', 'searchKey':'Builder'},
{'name': 'class Builder', 'description':'headout.oss.ergo.codegen.task.TaskMethodGenerator.Builder', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-method-generator/-builder/index.html', 'searchKey':'Builder'},
{'name': 'fun addMethod(task: <ERROR CLASS>, methodName: String): Boolean', 'description':'headout.oss.ergo.codegen.task.TaskControllerGenerator.Builder.addMethod', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-controller-generator/-builder/add-method.html', 'searchKey':'addMethod'},
{'name': 'fun build(): TaskControllerGenerator', 'description':'headout.oss.ergo.codegen.task.TaskControllerGenerator.Builder.build', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-controller-generator/-builder/build.html', 'searchKey':'build'},
{'name': 'fun build(): TaskMethodGenerator', 'description':'headout.oss.ergo.codegen.task.TaskMethodGenerator.Builder.build', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-method-generator/-builder/build.html', 'searchKey':'build'},
{'name': 'object Companion', 'description':'headout.oss.ergo.codegen.task.TaskControllerGenerator.Companion', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-controller-generator/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'headout.oss.ergo.codegen.task.TaskMethodGenerator.Companion', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-method-generator/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'headout.oss.ergo.processors.JobParserBinder.Companion', 'location':'ergo-processor/headout.oss.ergo.processors/-job-parser-binder/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'headout.oss.ergo.processors.TaskProcessor.Companion', 'location':'ergo-processor/headout.oss.ergo.processors/-task-processor/-companion/index.html', 'searchKey':'Companion'},
{'name': 'fun builder(targetType: TargetType, typeElement: TypeElement, classInspector: CachedClassInspector): TaskControllerGenerator.Builder', 'description':'headout.oss.ergo.codegen.task.TaskControllerGenerator.Companion.builder', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-controller-generator/-companion/builder.html', 'searchKey':'builder'},
{'name': 'fun builder(task: <ERROR CLASS>, targetMethod: TargetMethod, enclosingClass: <ERROR CLASS>): TaskMethodGenerator.Builder', 'description':'headout.oss.ergo.codegen.task.TaskMethodGenerator.Companion.builder', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-method-generator/-companion/builder.html', 'searchKey':'builder'},
{'name': 'class TaskMethodGenerator', 'description':'headout.oss.ergo.codegen.task.TaskMethodGenerator', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-method-generator/index.html', 'searchKey':'TaskMethodGenerator'},
{'name': 'fun getTargetMethodName(taskId: String): String', 'description':'headout.oss.ergo.codegen.task.TaskMethodGenerator.Companion.getTargetMethodName', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-method-generator/-companion/get-target-method-name.html', 'searchKey':'getTargetMethodName'},
{'name': 'fun createFunctionSpec(genHook: (<ERROR CLASS>) -> Unit): <ERROR CLASS>', 'description':'headout.oss.ergo.codegen.task.TaskMethodGenerator.createFunctionSpec', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-method-generator/create-function-spec.html', 'searchKey':'createFunctionSpec'},
{'name': 'fun createRequestDataSpec(): <ERROR CLASS>', 'description':'headout.oss.ergo.codegen.task.TaskMethodGenerator.createRequestDataSpec', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-method-generator/create-request-data-spec.html', 'searchKey':'createRequestDataSpec'},
{'name': 'fun getRequestType(type: <ERROR CLASS>): <ERROR CLASS>', 'description':'headout.oss.ergo.codegen.task.TaskMethodGenerator.getRequestType', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-method-generator/get-request-type.html', 'searchKey':'getRequestType'},
{'name': 'fun isRequestDataNeeded(): <ERROR CLASS>', 'description':'headout.oss.ergo.codegen.task.TaskMethodGenerator.isRequestDataNeeded', 'location':'ergo-processor/headout.oss.ergo.codegen.task/-task-method-generator/is-request-data-needed.html', 'searchKey':'isRequestDataNeeded'},
{'name': 'fun TargetMethod.getTargetArguments(prefixTargetArg: String, transformer: (TargetParameter) -> String): Iterable<String>', 'description':'headout.oss.ergo.codegen.task.getTargetArguments', 'location':'ergo-processor/headout.oss.ergo.codegen.task/get-target-arguments.html', 'searchKey':'getTargetArguments'},
{'name': 'class JobParserBinder(bindingMap: Map<TypeElement, TaskControllerGenerator>, jobParserApi: <ERROR CLASS>, processingEnvironment: <ERROR CLASS>) : TypeGenerator', 'description':'headout.oss.ergo.processors.JobParserBinder', 'location':'ergo-processor/headout.oss.ergo.processors/-job-parser-binder/index.html', 'searchKey':'JobParserBinder'},
{'name': 'fun JobParserBinder(bindingMap: Map<TypeElement, TaskControllerGenerator>, jobParserApi: <ERROR CLASS>, processingEnvironment: <ERROR CLASS>)', 'description':'headout.oss.ergo.processors.JobParserBinder.JobParserBinder', 'location':'ergo-processor/headout.oss.ergo.processors/-job-parser-binder/-job-parser-binder.html', 'searchKey':'JobParserBinder'},
{'name': 'class TaskProcessor', 'description':'headout.oss.ergo.processors.TaskProcessor', 'location':'ergo-processor/headout.oss.ergo.processors/-task-processor/index.html', 'searchKey':'TaskProcessor'},
{'name': 'fun TaskProcessor()', 'description':'headout.oss.ergo.processors.TaskProcessor.TaskProcessor', 'location':'ergo-processor/headout.oss.ergo.processors/-task-processor/-task-processor.html', 'searchKey':'TaskProcessor'},
{'name': 'open fun getSupportedAnnotationTypes(): Set<String>', 'description':'headout.oss.ergo.processors.TaskProcessor.getSupportedAnnotationTypes', 'location':'ergo-processor/headout.oss.ergo.processors/-task-processor/get-supported-annotation-types.html', 'searchKey':'getSupportedAnnotationTypes'},
{'name': 'open fun getSupportedSourceVersion(): SourceVersion', 'description':'headout.oss.ergo.processors.TaskProcessor.getSupportedSourceVersion', 'location':'ergo-processor/headout.oss.ergo.processors/-task-processor/get-supported-source-version.html', 'searchKey':'getSupportedSourceVersion'},
{'name': 'open fun process(annotations: Set<TypeElement>, roundEnv: RoundEnvironment): Boolean', 'description':'headout.oss.ergo.processors.TaskProcessor.process', 'location':'ergo-processor/headout.oss.ergo.processors/-task-processor/process.html', 'searchKey':'process'},
{'name': 'fun <ERROR CLASS>.addSuperclassConstructorParameters(vararg params: Array<Out String>): <ERROR CLASS>', 'description':'headout.oss.ergo.utils.addSuperclassConstructorParameters', 'location':'ergo-processor/headout.oss.ergo.utils/add-superclass-constructor-parameters.html', 'searchKey':'addSuperclassConstructorParameters'},
{'name': 'fun <ERROR CLASS>.addTypeVariables(vararg typeVars: Array<Out <ERROR CLASS>>): <ERROR CLASS>', 'description':'headout.oss.ergo.utils.addTypeVariables', 'location':'ergo-processor/headout.oss.ergo.utils/add-type-variables.html', 'searchKey':'addTypeVariables'},
{'name': 'fun <ERROR CLASS>.getFromConstructor(name: String, typeName: <ERROR CLASS>): <ERROR CLASS>', 'description':'headout.oss.ergo.utils.getFromConstructor', 'location':'ergo-processor/headout.oss.ergo.utils/get-from-constructor.html', 'searchKey':'getFromConstructor'},
{'name': 'fun <ERROR CLASS>.overrideFunction(name: String): <ERROR CLASS>', 'description':'headout.oss.ergo.utils.overrideFunction', 'location':'ergo-processor/headout.oss.ergo.utils/override-function.html', 'searchKey':'overrideFunction'},
{'name': 'fun ExecutableElement.toFunSpec(): <ERROR CLASS>', 'description':'headout.oss.ergo.utils.toFunSpec', 'location':'ergo-processor/headout.oss.ergo.utils/to-fun-spec.html', 'searchKey':'toFunSpec'},
{'name': 'fun Collection<<ERROR CLASS>>.withName(name: String): <ERROR CLASS>', 'description':'headout.oss.ergo.utils.withName', 'location':'ergo-processor/headout.oss.ergo.utils/with-name.html', 'searchKey':'withName'}]
